# config.py

# Neo4j Database Configuration
NEO4J_CONFIG = {
    "host": "127.0.0.1",
    "user": "neo4j",
    "password": "wfl"  # 强烈建议使用环境变量或更安全的方式管理密码
}

# File Paths
DATA_PATHS = {
    "keshi_disease": "./data/KeshiDisea.json",
    "classify": "./data/classfify.json"
}

# Model & Search Parameters
MAX_INTERSECTION_LENGTH = 50
MAX_SEARCH_DEPTH = 3  # 最大搜索跳数
SIMILARITY_TOP_K = 50  # 相似度计算后保留的候选数量

# Static Data
DEPARTMENTS_LIST = [
    '内科', '呼吸内科', '儿科', '小儿内科', '急诊科', '其他科室', '其他综合', '肿瘤科', '肿瘤内科',
    '外科', '心胸外科', '感染科', '传染科', '儿科综合', '妇产科', '产科', '普外科', '心内科', '肿瘤外科',
    '神经内科', '风湿免疫科', '五官科', '眼科', '内分泌科', '小儿外科', '耳鼻喉科', '妇科', '康复科',
    '消化内科', '肛肠科', '肝病', '皮肤性病科', '皮肤科', '肝胆外科', '血液科', '遗传病科', '肾内科',
    '泌尿外科', '泌尿内科', '中医科', '中医综合', '烧伤科', '男科', '骨外科', '神经外科', '精神科',
    '口腔科', '营养科', '性病科', '心理科', '生殖健康', '不孕不育', '减肥'
]

# Prompts for LLM
PROMPTS = {
    "extract_keyword": """
我现在需要根据用户输入的关于疾病的问题与已有的疾病名称进行相似度匹配，查找与用户输入的相似度最高的疾病名称。但是用户输入的句子中可能含有无关信息，请你分析用户的输入提取出疾病关键词语，方便我计算相似度。
注意：请直接返回你提取的关键词语且必须是与疾病名称相关，无需其他额外的回复或分析。返回的格式就是字符串即可。
用户输入的句子为： {question}
""",

    "find_entity_from_list": """
现在我需要根据用户输入的关于疾病的句子以及候选实体列表，查询出与用户问题最匹配的实体。注意你的答案只能从候选实体列表中返回，并且直接给出答案，无需其他额外的回复或分析。
用户问题为：{question}
候选列表：{entity_list}
如果候选列表中不存在该实体请直接返回“无”。
""",

    "get_department": """
请根据用户输入的疾病名称给出对应就诊的科室，注意科室只能从已给的列表中查询，并且直接给出答案即可，不需要额外的回答和分析。
用户问题或疾病的名称为：{question}
科室列表：{department_list}
""",

    "get_body_part": """
请根据用户输入的疾病相关问题，结合你已有的知识，对这个包含疾病信息的句子的患病部位进行分类。本次任务患病部位分为四类，颈部及以上部分记为“Head”，腰部到颈部记为“Body”，腰部以下记为“Tail”，未知的分类记为“Other”。
请在回答中直接返回答案，注意你的答案只能从Head、Body、Tail、Other中选择。
用户问题为: {question}
""",

    "judge_path_sufficiency": """
请根据用户的具体问题，判断用户的所有问题是否都能从知识路径中直接找到对应的知识路径。如果每个问题都能在知识路径中找到对应的知识路径，请回答“是”。如果至少有一个问题在知识路径中找不到对应的知识路径，请回答“否”。Let’s think step by step。
用户问题为：{question}
目前的知识路径为：{knowledge_paths}
请注意：形如A->r->B，表示A的r是B。例如：荨麻疹->并发症->喉水肿，表示荨麻疹的并发症是喉水肿。
另外，请将经过分析后的结果直接返回，直接返回”是“或者”否“，无需进行额外的分析与回复。
""",

    "select_next_hop_path": """
请按照用户问题的顺序和已知的知识路径，从给定的列表中推理出最符合逻辑的下一级知识路径，并直接返回该路径。
请注意，返回的内容必须是列表中的一个元素，不能随意改变，并且要符合逐级推理的要求。
Let’s think step by step.

用户问题：{question}
已知的上一级路径：{previous_path}
请从下面的列表中选择并返回最相关的下一级路径：
{path_options}
""",

    "generate_final_answer": """
请根据用户输入的问题和从知识图谱中查询到的相关知识，结合你自己的知识储备，给出一个详尽、准确且语言流畅的回答。
用户问题为：{question}
从知识图谱中查询到的知识三元组为：
{knowledge}
"""
}